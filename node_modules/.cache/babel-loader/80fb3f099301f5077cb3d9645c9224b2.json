{"ast":null,"code":"var _jsxFileName = \"/Users/mathewmozaffari/Downloads/photoAlbum/src/components/Home.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport Select from 'react-select';\nimport { FETCH_USER_ERROR, FETCH_USER_ALBUM_ERROR, FETCH_USER_ALBUM_PHOTOS_ERROR } from '../actions/types';\nimport { GetUsers, startFetchingUser, GetUserAlbum, startFetchingAlbum, GetUserAlbumPhotos, startFetchingAlbumPhotos } from '../actions/UserActions';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeUser = val => {\n      this.setState({\n        selectedUserId: val.value\n      }, () => {\n        this.getUserAlbums();\n      });\n    };\n\n    this.getUserAlbums = () => {\n      if (!!this.state.selectedUserId === true) {\n        this.props.showAlbumLoading();\n        this.props.getUserAlbumsCall(this.state.selectedUserId);\n      }\n    };\n\n    this.onSelectAlbum = id => {\n      this.setState({\n        selectedAlbumId: id\n      }, () => {\n        this.getAlbumsPhotos();\n      });\n    };\n\n    this.getAlbumsPhotos = () => {\n      if (!!this.state.selectedAlbumId === true) {\n        this.props.showAlbumPhotosLoading();\n        this.props.getUserAlbumsPhotosCall(this.state.selectedAlbumId);\n      }\n    };\n\n    this.props.showLoading();\n    this.props.getUsersCall();\n    this.state = {\n      selectedUserId: null,\n      selectedAlbumId: null\n    };\n  }\n\n  render() {\n    let _this$props$user = this.props.user,\n        fetching = _this$props$user.fetching,\n        userInfo = _this$props$user.userInfo,\n        albumFetching = _this$props$user.albumFetching,\n        userAlbum = _this$props$user.userAlbum,\n        photosFetching = _this$props$user.photosFetching,\n        albumPhotos = _this$props$user.albumPhotos;\n    let selectedUserId = this.state.selectedUserId;\n    return React.createElement(\"div\", {\n      className: \"w3-container home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"w3-padding-16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, fetching && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"loading...\"), userInfo.length > 0 && React.createElement(UserSelection, {\n      userInfo: userInfo,\n      _onChange: this.onChangeUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"w3-padding-16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, albumFetching && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"loading...\"), userAlbum.length > 0 && React.createElement(UserAlbum, {\n      albums: userAlbum,\n      _onChange: this.onSelectAlbum,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"w3-padding-16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, photosFetching && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"loading...\"), albumPhotos.length > 0 && React.createElement(AlbumPhotos, {\n      photos: albumPhotos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst UserSelection = ({\n  userInfo,\n  _onChange\n}) => {\n  const options = userInfo.map(user => {\n    return {\n      value: user.id,\n      label: user.name\n    };\n  });\n  return React.createElement(Select, {\n    options: options,\n    onChange: _onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  });\n};\n\nconst UserAlbum = ({\n  albums,\n  _onChange\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110\n  },\n  __self: this\n}, albums.map((album, index) => React.createElement(\"div\", {\n  key: `album-${index}`,\n  className: \"w3-container w3-cell w3-mobile\",\n  onClick: () => _onChange(album.id),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114\n  },\n  __self: this\n}, album.title))));\n\nconst AlbumPhotos = ({\n  photos\n}) => React.createElement(\"div\", {\n  className: 'gallery',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 124\n  },\n  __self: this\n}, photos.map((photo, index) => React.createElement(\"div\", {\n  key: `photo-${index}`,\n  className: \"w3-cell w3-mobile\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 127\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: photo.thumbnailUrl,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 128\n  },\n  __self: this\n}))));\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    showLoading: () => {\n      dispatch(startFetchingUser());\n    },\n    getUsersCall: () => {\n      GetUsers().then(result => {\n        dispatch(result);\n      }).catch(error => {\n        dispatch({\n          type: FETCH_USER_ERROR,\n          payload: \"Failed to fetch users\"\n        });\n      });\n    },\n    showAlbumLoading: () => {\n      dispatch(startFetchingAlbum());\n    },\n    getUserAlbumsCall: userId => {\n      GetUserAlbum(userId).then(result => {\n        dispatch(result);\n      }).catch(error => {\n        dispatch({\n          type: FETCH_USER_ALBUM_ERROR,\n          payload: \"Failed to fetch user Albums\"\n        });\n      });\n    },\n    showAlbumPhotosLoading: () => {\n      dispatch(startFetchingAlbumPhotos());\n    },\n    getUserAlbumsPhotosCall: albumId => {\n      GetUserAlbumPhotos(albumId).then(result => {\n        dispatch(result);\n      }).catch(error => {\n        dispatch({\n          type: FETCH_USER_ALBUM_PHOTOS_ERROR,\n          payload: \"Failed to fetch user albums photos\"\n        });\n      });\n    }\n  };\n};\n\nHome = withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));\nexport default Home;","map":{"version":3,"sources":["/Users/mathewmozaffari/Downloads/photoAlbum/src/components/Home.js"],"names":["React","Component","connect","Redirect","withRouter","Select","FETCH_USER_ERROR","FETCH_USER_ALBUM_ERROR","FETCH_USER_ALBUM_PHOTOS_ERROR","GetUsers","startFetchingUser","GetUserAlbum","startFetchingAlbum","GetUserAlbumPhotos","startFetchingAlbumPhotos","Home","constructor","props","onChangeUser","val","setState","selectedUserId","value","getUserAlbums","state","showAlbumLoading","getUserAlbumsCall","onSelectAlbum","id","selectedAlbumId","getAlbumsPhotos","showAlbumPhotosLoading","getUserAlbumsPhotosCall","showLoading","getUsersCall","render","user","fetching","userInfo","albumFetching","userAlbum","photosFetching","albumPhotos","length","UserSelection","_onChange","options","map","label","name","UserAlbum","albums","album","index","title","AlbumPhotos","photos","photo","thumbnailUrl","mapStateToProps","mapDispatchToProps","dispatch","then","result","catch","error","type","payload","userId","albumId"],"mappings":"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","sourcesContent":["import React , { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport Select from 'react-select'\r\n\r\nimport { FETCH_USER_ERROR, FETCH_USER_ALBUM_ERROR, FETCH_USER_ALBUM_PHOTOS_ERROR } from '../actions/types';\r\nimport { GetUsers, startFetchingUser, GetUserAlbum, startFetchingAlbum, GetUserAlbumPhotos, startFetchingAlbumPhotos } from '../actions/UserActions';\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.props.showLoading()\r\n    this.props.getUsersCall()\r\n\r\n    this.state = {\r\n      selectedUserId: null,\r\n      selectedAlbumId: null\r\n    }\r\n  }\r\n\r\n  onChangeUser = (val) => {\r\n    this.setState({\r\n      selectedUserId: val.value\r\n    }, () => {\r\n      this.getUserAlbums()\r\n    })\r\n  }\r\n\r\n  getUserAlbums = () => {\r\n    if(!!this.state.selectedUserId === true) {\r\n      this.props.showAlbumLoading()\r\n      this.props.getUserAlbumsCall(this.state.selectedUserId)\r\n    }\r\n  }\r\n\r\n  onSelectAlbum = (id) => {\r\n    this.setState({\r\n      selectedAlbumId: id\r\n    }, () => {\r\n      this.getAlbumsPhotos()\r\n    })\r\n  }\r\n\r\n  getAlbumsPhotos = () => {\r\n    if(!!this.state.selectedAlbumId === true) {\r\n      this.props.showAlbumPhotosLoading()\r\n      this.props.getUserAlbumsPhotosCall(this.state.selectedAlbumId)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { fetching, userInfo, albumFetching, userAlbum, photosFetching, albumPhotos } = this.props.user\r\n    let { selectedUserId }= this.state\r\n    return (\r\n      <div className=\"w3-container home\">\r\n\r\n        <div className=\"w3-padding-16\">\r\n          {fetching && \r\n            <div>loading...</div>\r\n          }\r\n          {userInfo.length > 0 &&\r\n            <UserSelection userInfo={userInfo} _onChange={this.onChangeUser} />\r\n          }\r\n        </div>\r\n\r\n        <div className=\"w3-padding-16\">\r\n          {albumFetching && \r\n            <div>loading...</div>\r\n          }\r\n          {userAlbum.length > 0 &&\r\n            <UserAlbum albums={userAlbum} _onChange={this.onSelectAlbum} />\r\n          }\r\n        </div>\r\n\r\n        <div className=\"w3-padding-16\">\r\n          {photosFetching && \r\n            <div>loading...</div>\r\n          }\r\n          {albumPhotos.length > 0 &&\r\n            <AlbumPhotos photos={albumPhotos}/>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst UserSelection = ({\r\nuserInfo,\r\n_onChange,\r\n}) => {\r\n  const options = userInfo.map(user => {\r\n    return {\r\n      value: user.id,\r\n      label: user.name\r\n    }\r\n  })\r\nreturn (\r\n  <Select \r\n    options={options}\r\n    onChange={_onChange}  \r\n  />\r\n)\r\n}\r\n\r\nconst UserAlbum = ({\r\n  albums,\r\n  _onChange\r\n}) => (\r\n  <div>\r\n    {\r\n      albums.map((album, index) => \r\n        <div key={`album-${index}`} className=\"w3-container w3-cell w3-mobile\" onClick={()=> _onChange(album.id)}>\r\n          <span>{album.title}</span>\r\n        </div>\r\n      )\r\n    }\r\n  </div>\r\n)\r\n\r\nconst AlbumPhotos = ({\r\n  photos\r\n}) => (\r\n  <div className={'gallery'}>\r\n    {\r\n      photos.map((photo, index) => \r\n        <div key={`photo-${index}`} className=\"w3-cell w3-mobile\">\r\n          <img src={photo.thumbnailUrl} />\r\n        </div>\r\n      )\r\n    }\r\n  </div>\r\n)\r\n\r\nfunction mapStateToProps(state) {\r\n  return { \r\n    user: state.user\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    showLoading: () => {\r\n      dispatch(startFetchingUser());\r\n    },\r\n    getUsersCall: () => {\r\n      GetUsers()\r\n        .then(result => {\r\n          dispatch(result);\r\n        })\r\n      .catch(error => {\r\n        dispatch({type: FETCH_USER_ERROR, payload: \"Failed to fetch users\"});\r\n      });\r\n    },\r\n    showAlbumLoading: () => {\r\n      dispatch(startFetchingAlbum());\r\n    },\r\n    getUserAlbumsCall: (userId) => {\r\n      GetUserAlbum(userId)\r\n        .then(result => {\r\n          dispatch(result);\r\n        })\r\n      .catch(error => {\r\n        dispatch({type: FETCH_USER_ALBUM_ERROR, payload: \"Failed to fetch user Albums\"});\r\n      });\r\n    },\r\n    showAlbumPhotosLoading: () => {\r\n      dispatch(startFetchingAlbumPhotos());\r\n    },\r\n    getUserAlbumsPhotosCall: (albumId) => {\r\n      GetUserAlbumPhotos(albumId)\r\n        .then(result => {\r\n          dispatch(result);\r\n        })\r\n      .catch(error => {\r\n        dispatch({type: FETCH_USER_ALBUM_PHOTOS_ERROR, payload: \"Failed to fetch user albums photos\"});\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nHome = withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}