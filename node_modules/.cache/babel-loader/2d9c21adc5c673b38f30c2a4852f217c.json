{"ast":null,"code":"var _jsxFileName = \"/Users/mathewmozaffari/Downloads/photoAlbum/src/components/LightImageBox.js\";\nimport React, { Component } from \"react\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nexport default class LightImageBox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.closeModal = () => {\n      this.setState({\n        isOpen: false\n      }, () => {\n        this.props.onClose();\n      });\n    };\n\n    this.state = {\n      images: this.props.images,\n      photoIndex: this.props.selectedPhotoIndex,\n      isOpen: this.props.openLightBox\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          photoIndex = _this$state.photoIndex,\n          isOpen = _this$state.isOpen,\n          images = _this$state.images;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, isOpen && React.createElement(Lightbox, {\n      mainSrc: images[photoIndex],\n      nextSrc: images[(photoIndex + 1) % images.length],\n      prevSrc: images[(photoIndex + images.length - 1) % images.length],\n      onCloseRequest: () => this.closeModal(),\n      onMovePrevRequest: () => this.setState({\n        photoIndex: (photoIndex + images.length - 1) % images.length\n      }),\n      onMoveNextRequest: () => this.setState({\n        photoIndex: (photoIndex + 1) % images.length\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/mathewmozaffari/Downloads/photoAlbum/src/components/LightImageBox.js"],"names":["React","Component","Lightbox","LightImageBox","constructor","props","closeModal","setState","isOpen","onClose","state","images","photoIndex","selectedPhotoIndex","openLightBox","render","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,gCAAP;AAEA,eAAe,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AACnDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,UAVmB,GAUN,MAAM;AACjB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAd,EAAiC,MAAM;AACrC,aAAKH,KAAL,CAAWI,OAAX;AACD,OAFD;AAGD,KAdkB;;AAGjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,KAAKN,KAAL,CAAWM,MADR;AAEXC,MAAAA,UAAU,EAAE,KAAKP,KAAL,CAAWQ,kBAFZ;AAGXL,MAAAA,MAAM,EAAE,KAAKH,KAAL,CAAWS;AAHR,KAAb;AAKD;;AAQDC,EAAAA,MAAM,GAAG;AAAA,wBACgC,KAAKL,KADrC;AAAA,UACCE,UADD,eACCA,UADD;AAAA,UACaJ,MADb,eACaA,MADb;AAAA,UACqBG,MADrB,eACqBA,MADrB;AAGP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,MAAM,IACL,oBAAC,QAAD;AACE,MAAA,OAAO,EAAEG,MAAM,CAACC,UAAD,CADjB;AAEE,MAAA,OAAO,EAAED,MAAM,CAAC,CAACC,UAAU,GAAG,CAAd,IAAmBD,MAAM,CAACK,MAA3B,CAFjB;AAGE,MAAA,OAAO,EAAEL,MAAM,CAAC,CAACC,UAAU,GAAGD,MAAM,CAACK,MAApB,GAA6B,CAA9B,IAAmCL,MAAM,CAACK,MAA3C,CAHjB;AAIE,MAAA,cAAc,EAAE,MAAM,KAAKV,UAAL,EAJxB;AAKE,MAAA,iBAAiB,EAAE,MACjB,KAAKC,QAAL,CAAc;AACZK,QAAAA,UAAU,EAAE,CAACA,UAAU,GAAGD,MAAM,CAACK,MAApB,GAA6B,CAA9B,IAAmCL,MAAM,CAACK;AAD1C,OAAd,CANJ;AAUE,MAAA,iBAAiB,EAAE,MACjB,KAAKT,QAAL,CAAc;AACZK,QAAAA,UAAU,EAAE,CAACA,UAAU,GAAG,CAAd,IAAmBD,MAAM,CAACK;AAD1B,OAAd,CAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADF;AAsBD;;AA1CkD","sourcesContent":["import React, { Component } from \"react\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\n\nexport default class LightImageBox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      images: this.props.images,\n      photoIndex: this.props.selectedPhotoIndex,\n      isOpen: this.props.openLightBox\n    };\n  }\n\n  closeModal = () => {\n    this.setState({ isOpen: false }, () => {\n      this.props.onClose()\n    })\n  }\n\n  render() {\n    const { photoIndex, isOpen, images } = this.state;\n\n    return (\n      <div>\n        {isOpen && (\n          <Lightbox\n            mainSrc={images[photoIndex]}\n            nextSrc={images[(photoIndex + 1) % images.length]}\n            prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n            onCloseRequest={() => this.closeModal()}\n            onMovePrevRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + images.length - 1) % images.length\n              })\n            }\n            onMoveNextRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + 1) % images.length\n              })\n            }\n          />\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}