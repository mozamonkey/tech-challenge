{"ast":null,"code":"import _objectSpread from \"/Users/mathewmozaffari/Desktop/tech-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/mathewmozaffari/Desktop/tech-challenge/src/components/Home.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport Select from 'react-select';\nimport LightImageBox from './LightImageBox';\nimport { FETCH_USER_ERROR, FETCH_USER_ALBUM_ERROR, FETCH_USER_ALBUM_PHOTOS_ERROR } from '../actions/types';\nimport { GetUsers, startFetchingUser, GetUserAlbum, startFetchingAlbum, GetUserAlbumPhotos, startFetchingAlbumPhotos } from '../actions/UserActions';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeUser = val => {\n      this.setState({\n        selectedUserId: val.value\n      }, () => {\n        this.getUserAlbums();\n      });\n    };\n\n    this.getUserAlbums = () => {\n      if (!!this.state.selectedUserId === true) {\n        this.props.showAlbumLoading();\n        this.props.getUserAlbumsCall(this.state.selectedUserId);\n      }\n    };\n\n    this.onSelectAlbum = id => {\n      this.setState({\n        selectedAlbumId: id\n      }, () => {\n        this.getAlbumsPhotos();\n      });\n    };\n\n    this.getAlbumsPhotos = () => {\n      if (!!this.state.selectedAlbumId === true) {\n        this.props.showAlbumPhotosLoading();\n        this.props.getUserAlbumsPhotosCall(this.state.selectedAlbumId);\n      }\n    };\n\n    this.onSelectPhoto = index => {\n      let albumPhotos = this.props.user.albumPhotos;\n      let onlyImages = albumPhotos.map(img => img.url);\n      this.setState({\n        selectedPhotoIndex: index,\n        openLightBox: true,\n        images: onlyImages\n      });\n    };\n\n    this.onLightBoxClose = () => {\n      this.setState({\n        selectedPhotoIndex: null,\n        openLightBox: false,\n        images: []\n      });\n    };\n\n    this.props.showLoading();\n    this.props.getUsersCall();\n    this.state = {\n      selectedUserId: null,\n      selectedAlbumId: null,\n      selectedPhotoIndex: null,\n      openLightBox: false,\n      images: []\n    };\n  }\n\n  render() {\n    let _this$props$user = this.props.user,\n        fetching = _this$props$user.fetching,\n        userInfo = _this$props$user.userInfo,\n        albumFetching = _this$props$user.albumFetching,\n        userAlbum = _this$props$user.userAlbum,\n        photosFetching = _this$props$user.photosFetching,\n        albumPhotos = _this$props$user.albumPhotos;\n    let _this$state = this.state,\n        openLightBox = _this$state.openLightBox,\n        images = _this$state.images,\n        selectedPhotoIndex = _this$state.selectedPhotoIndex;\n    return React.createElement(\"div\", {\n      className: \"w3-container home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"w3-padding-16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"select-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, fetching && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"loading...\"), userInfo.length > 0 && React.createElement(UserSelection, {\n      userInfo: userInfo,\n      _onChange: this.onChangeUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"w3-padding-16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, albumFetching && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"loading...\"), userAlbum.length > 0 && React.createElement(UserAlbum, {\n      albums: userAlbum,\n      _onChange: this.onSelectAlbum,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"w3-padding-16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, photosFetching && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"loading...\"), albumPhotos.length > 0 && React.createElement(AlbumPhotos, {\n      photos: albumPhotos,\n      _onChange: this.onSelectPhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), openLightBox && React.createElement(LightImageBox, {\n      images: images,\n      selectedPhotoIndex: selectedPhotoIndex,\n      openLightBox: openLightBox,\n      onClose: this.onLightBoxClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst colourStyles = {\n  control: styles => _objectSpread({}, styles, {\n    borderWidth: '15px',\n    border: '15px solid #fff',\n    backgroundColor: 'transparent',\n    borderRadius: '7px',\n    transition: '0.5s ease all',\n    padding: '5px 10px'\n  })\n};\n\nconst UserSelection = ({\n  userInfo,\n  _onChange\n}) => {\n  const options = userInfo.map(user => {\n    return {\n      value: user.id,\n      label: user.name\n    };\n  });\n  return React.createElement(Select, {\n    options: options,\n    onChange: _onChange,\n    styles: colourStyles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  });\n};\n\nconst UserAlbum = ({\n  albums,\n  _onChange\n}) => React.createElement(\"div\", {\n  className: 'album',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 149\n  },\n  __self: this\n}, albums.map((album, index) => React.createElement(\"div\", {\n  key: `album-${index}`,\n  className: \"w3-container w3-cell w3-mobile albumCard\",\n  onClick: () => _onChange(album.id),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 152\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 153\n  },\n  __self: this\n}, album.title))));\n\nconst AlbumPhotos = ({\n  photos,\n  _onChange\n}) => React.createElement(\"div\", {\n  className: 'gallery',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 164\n  },\n  __self: this\n}, photos.map((photo, index) => React.createElement(\"div\", {\n  key: `photo-${index}`,\n  className: \"w3-cell w3-mobile\",\n  onClick: () => _onChange(index),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 167\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: photo.thumbnailUrl,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 168\n  },\n  __self: this\n}))));\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    showLoading: () => {\n      dispatch(startFetchingUser());\n    },\n    getUsersCall: () => {\n      GetUsers().then(result => {\n        dispatch(result);\n      }).catch(error => {\n        dispatch({\n          type: FETCH_USER_ERROR,\n          payload: \"Failed to fetch users\"\n        });\n      });\n    },\n    showAlbumLoading: () => {\n      dispatch(startFetchingAlbum());\n    },\n    getUserAlbumsCall: userId => {\n      GetUserAlbum(userId).then(result => {\n        dispatch(result);\n      }).catch(error => {\n        dispatch({\n          type: FETCH_USER_ALBUM_ERROR,\n          payload: \"Failed to fetch user Albums\"\n        });\n      });\n    },\n    showAlbumPhotosLoading: () => {\n      dispatch(startFetchingAlbumPhotos());\n    },\n    getUserAlbumsPhotosCall: albumId => {\n      GetUserAlbumPhotos(albumId).then(result => {\n        dispatch(result);\n      }).catch(error => {\n        dispatch({\n          type: FETCH_USER_ALBUM_PHOTOS_ERROR,\n          payload: \"Failed to fetch user albums photos\"\n        });\n      });\n    }\n  };\n};\n\nHome = withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));\nexport default Home;","map":{"version":3,"sources":["/Users/mathewmozaffari/Desktop/tech-challenge/src/components/Home.js"],"names":["React","Component","connect","Redirect","withRouter","Select","LightImageBox","FETCH_USER_ERROR","FETCH_USER_ALBUM_ERROR","FETCH_USER_ALBUM_PHOTOS_ERROR","GetUsers","startFetchingUser","GetUserAlbum","startFetchingAlbum","GetUserAlbumPhotos","startFetchingAlbumPhotos","Home","constructor","props","onChangeUser","val","setState","selectedUserId","value","getUserAlbums","state","showAlbumLoading","getUserAlbumsCall","onSelectAlbum","id","selectedAlbumId","getAlbumsPhotos","showAlbumPhotosLoading","getUserAlbumsPhotosCall","onSelectPhoto","index","albumPhotos","user","onlyImages","map","img","url","selectedPhotoIndex","openLightBox","images","onLightBoxClose","showLoading","getUsersCall","render","fetching","userInfo","albumFetching","userAlbum","photosFetching","length","colourStyles","control","styles","borderWidth","border","backgroundColor","borderRadius","transition","padding","UserSelection","_onChange","options","label","name","UserAlbum","albums","album","title","AlbumPhotos","photos","photo","thumbnailUrl","mapStateToProps","mapDispatchToProps","dispatch","then","result","catch","error","type","payload","userId","albumId"],"mappings":"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","sourcesContent":["import React , { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport Select from 'react-select'\r\n\r\nimport LightImageBox from './LightImageBox'\r\nimport { FETCH_USER_ERROR, FETCH_USER_ALBUM_ERROR, FETCH_USER_ALBUM_PHOTOS_ERROR } from '../actions/types';\r\nimport { GetUsers, startFetchingUser, GetUserAlbum, startFetchingAlbum, GetUserAlbumPhotos, startFetchingAlbumPhotos } from '../actions/UserActions';\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.props.showLoading()\r\n    this.props.getUsersCall()\r\n\r\n    this.state = {\r\n      selectedUserId: null,\r\n      selectedAlbumId: null,\r\n      selectedPhotoIndex: null,\r\n      openLightBox: false,\r\n      images: []\r\n    }\r\n  }\r\n\r\n  onChangeUser = (val) => {\r\n    this.setState({\r\n      selectedUserId: val.value\r\n    }, () => {\r\n      this.getUserAlbums()\r\n    })\r\n  }\r\n\r\n  getUserAlbums = () => {\r\n    if(!!this.state.selectedUserId === true) {\r\n      this.props.showAlbumLoading()\r\n      this.props.getUserAlbumsCall(this.state.selectedUserId)\r\n    }\r\n  }\r\n\r\n  onSelectAlbum = (id) => {\r\n    this.setState({\r\n      selectedAlbumId: id\r\n    }, () => {\r\n      this.getAlbumsPhotos()\r\n    })\r\n  }\r\n\r\n  getAlbumsPhotos = () => {\r\n    if(!!this.state.selectedAlbumId === true) {\r\n      this.props.showAlbumPhotosLoading()\r\n      this.props.getUserAlbumsPhotosCall(this.state.selectedAlbumId)\r\n    }\r\n  }\r\n\r\n  onSelectPhoto = (index) => {\r\n    let { albumPhotos } = this.props.user\r\n    let onlyImages = albumPhotos.map(img => img.url)\r\n    this.setState({\r\n      selectedPhotoIndex: index,\r\n      openLightBox: true,\r\n      images: onlyImages\r\n    })\r\n  }\r\n\r\n  onLightBoxClose = () => {\r\n    this.setState({\r\n      selectedPhotoIndex: null,\r\n      openLightBox: false,\r\n      images: []\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let { fetching, userInfo, albumFetching, userAlbum, photosFetching, albumPhotos } = this.props.user\r\n    let { openLightBox, images, selectedPhotoIndex }= this.state\r\n    return (\r\n      <div className=\"w3-container home\">\r\n\r\n        <div className=\"w3-padding-16\">\r\n          <div className=\"select-wrapper\">\r\n            {fetching && \r\n              <div>loading...</div>\r\n            }\r\n            {userInfo.length > 0 &&\r\n              <UserSelection userInfo={userInfo} _onChange={this.onChangeUser} />\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"w3-padding-16\">\r\n          {albumFetching && \r\n            <div>loading...</div>\r\n          }\r\n          {userAlbum.length > 0 &&\r\n            <UserAlbum albums={userAlbum} _onChange={this.onSelectAlbum} />\r\n          }\r\n        </div>\r\n\r\n        <div className=\"w3-padding-16\">\r\n          {photosFetching && \r\n            <div>loading...</div>\r\n          }\r\n          {albumPhotos.length > 0 &&\r\n            <AlbumPhotos photos={albumPhotos} _onChange={this.onSelectPhoto} />\r\n          }\r\n        </div>\r\n        { openLightBox &&\r\n          <LightImageBox images={images} selectedPhotoIndex={selectedPhotoIndex} openLightBox={openLightBox} onClose={this.onLightBoxClose} />\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst colourStyles = {\r\n  control: styles => ({ ...styles, \r\n    borderWidth: '15px',\r\n    border: '15px solid #fff',\r\n    backgroundColor: 'transparent',\r\n    borderRadius: '7px',\r\n    transition: '0.5s ease all',\r\n    padding: '5px 10px'\r\n  })\r\n}\r\n\r\nconst UserSelection = ({\r\nuserInfo,\r\n_onChange,\r\n}) => {\r\n  const options = userInfo.map(user => {\r\n    return {\r\n      value: user.id,\r\n      label: user.name\r\n    }\r\n  })\r\nreturn (\r\n  <Select \r\n    options={options}\r\n    onChange={_onChange}  \r\n    styles={colourStyles}\r\n  />\r\n)\r\n}\r\n\r\nconst UserAlbum = ({\r\n  albums,\r\n  _onChange\r\n}) => (\r\n  <div className={'album'}>\r\n    {\r\n      albums.map((album, index) => \r\n        <div key={`album-${index}`} className=\"w3-container w3-cell w3-mobile albumCard\" onClick={()=> _onChange(album.id)}>\r\n          <span>{album.title}</span>\r\n        </div>\r\n      )\r\n    }\r\n  </div>\r\n)\r\n\r\nconst AlbumPhotos = ({\r\n  photos,\r\n  _onChange\r\n}) => (\r\n  <div className={'gallery'}>\r\n    {\r\n      photos.map((photo, index) => \r\n        <div key={`photo-${index}`} className=\"w3-cell w3-mobile\" onClick={() => _onChange(index)}>\r\n          <img src={photo.thumbnailUrl} />\r\n        </div>\r\n      )\r\n    }\r\n  </div>\r\n)\r\n\r\nfunction mapStateToProps(state) {\r\n  return { \r\n    user: state.user\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    showLoading: () => {\r\n      dispatch(startFetchingUser());\r\n    },\r\n    getUsersCall: () => {\r\n      GetUsers()\r\n        .then(result => {\r\n          dispatch(result);\r\n        })\r\n      .catch(error => {\r\n        dispatch({type: FETCH_USER_ERROR, payload: \"Failed to fetch users\"});\r\n      });\r\n    },\r\n    showAlbumLoading: () => {\r\n      dispatch(startFetchingAlbum());\r\n    },\r\n    getUserAlbumsCall: (userId) => {\r\n      GetUserAlbum(userId)\r\n        .then(result => {\r\n          dispatch(result);\r\n        })\r\n      .catch(error => {\r\n        dispatch({type: FETCH_USER_ALBUM_ERROR, payload: \"Failed to fetch user Albums\"});\r\n      });\r\n    },\r\n    showAlbumPhotosLoading: () => {\r\n      dispatch(startFetchingAlbumPhotos());\r\n    },\r\n    getUserAlbumsPhotosCall: (albumId) => {\r\n      GetUserAlbumPhotos(albumId)\r\n        .then(result => {\r\n          dispatch(result);\r\n        })\r\n      .catch(error => {\r\n        dispatch({type: FETCH_USER_ALBUM_PHOTOS_ERROR, payload: \"Failed to fetch user albums photos\"});\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nHome = withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}